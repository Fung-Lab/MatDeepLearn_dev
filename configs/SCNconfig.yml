trainer: property

task:
  # run_mode: train
  identifier: "my_train_job"
  reprocess: False
  parallel: True
  # seed=0 means random initalization
  seed: 0
  # Defaults to run directory if not specified
  # save_dir: "."
  # checkpoint_dir: "."
  write_output: True
  parallel: True
  #Training print out frequency (print per n number of epochs)
  verbosity: 5

model:
  name: scn
  load_model: False
  save_model: True
  model_path: "my_model.pth"
  edge_steps: 50
  self_loop: True
  # model attributes
  use_pbc: False
  regress_forces: False
  otf_graph: False
  max_num_neighbors: 20
  cutoff: 8.0
  max_num_elements: 90
  num_interactions: 8
  lmax: 6
  mmax: 1
  num_resolutions: 2
  sphere_channels: 128
  sphere_channels_reduce: 128
  hidden_channels: 256
  num_taps: -1
  use_grid: True
  num_bands: 1
  num_sphere_samples: 128
  num_basis_functions: 128
  distance_function: "gaussian"
  basis_width_scalar: 1.0
  distance_resolution: 0.02
  show_timing_info: False
  direct_forces: True

optim:
  max_epochs: 250
  max_checkpoint_epochs: 0
  lr: 0.0005
  # Either custom or from torch.nn.functional library. If from torch, loss_type is TorchLossWrapper
  loss:
    loss_type: "TorchLossWrapper"
    loss_args: {"loss_fn": "l1_loss"}

  batch_size: 100
  optimizer:
    optimizer_type: "AdamW"
    optimizer_args: {}
  scheduler:
    scheduler_type: "ReduceLROnPlateau"
    scheduler_args: {"mode":"min", "factor":0.8, "patience":10, "min_lr":0.00001, "threshold":0.0002}

dataset:
  processed: False
  # Path to data files
  src: "/global/cfs/projectdirs/m3641/Shared/Materials_datasets/2D_data_npj/raw/"
  # Path to target file within data_path
  target_path: "/global/cfs/projectdirs/m3641/Shared/Materials_datasets/2D_data_npj/targets.csv"
  # Path to save processed data.pt file
  pt_path: "/global/homes/r/rithwiks/datasets/2D_data_npj/"
  transforms:
    - name: GetY
      args:
        index: 0
      otf: True # Optional parameter, default is False
  all_neighbors : True
  # one of mdl, ase, ocp
  edge_calc_method: "mdl"
  # Format of data files (limit to those supported by ASE)
  data_format: "json"
  # Method of obtaining atom idctionary: available:(onehot)
  node_representation: "onehot"
  additional_attributes: []
  # Print out processing info
  verbose: True
  # Index of target column in targets.csv
  # graph specific settings
  preprocess_params:
    cutoff_radius : 5.0
    n_neighbors : 250
    num_offsets: 1
    edge_steps : 50
  # Ratios for train/val/test split out of a total of 1
  train_ratio: 0.8
  val_ratio: 0.05
  test_ratio: 0.15
