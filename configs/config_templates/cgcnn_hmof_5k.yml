trainer: property

task:
    # run_mode: train
    identifier: 'cgcnn_vn_hmof'
    reprocess: False
    run_id: ''
    device: 'cuda:0'
    seed: 0

    save_dir:
    continue_job: False
    load_training_state: False

    # seed=0 means random initalization
    write_output: True
    parallel: False
    # Training print out frequency (print per n number of epochs)
    verbosity: 1
    wandb:
        use_wandb: True
        wandb_entity: 'fung-lab'
        wandb_project: 'cgcnn_vn_new'
        notes: ''
        tags: ['test']
        track_params:
            - 'model.hyperparams.mp_pattern'
            - 'model.hyperparams.pool'
            - 'model.hyperparams.virtual_pool'
            - 'model.hyperparams.gc_count'
            - 'optim.lr'
            - 'optim.batch_size'
            - 'optim.max_epochs'
            - 'dataset.preprocess_params.num_offsets'
            - 'dataset.preprocess_params.edge_calc_method'
            - 'dataset.preprocess_params.all_neighbors'
            - 'dataset.preprocess_params.edge_steps'
            - 'dataset.preprocess_params.use_degree'
        log_artifacts:
            # - "/storage/home/hcoda1/9/sbaskaran31/p-vfung3-0/MatDeepLearn_dev/matdeeplearn/models/cgcnn_vn.py"
            - '/global/cfs/projectdirs/m3641/Sidharth/MatDeepLearn_dev/matdeeplearn/models/cgcnn_vn.py'
            # - "/Users/sidbaskaran/Desktop/research/MatDeepLearn_dev/matdeeplearn/models/cgcnn_vn.py"
            # - "/nethome/sbaskaran31/projects/Sidharth/MatDeepLearn_dev/matdeeplearn/models/cgcnn_vn.py"
        metadata:
            architecture: 'CGCNN_VN'
            cluster: 'fung-cluster'
            dataset: 'hMOF-5K'
        sweep:
            parallel: True
            do_sweep: False # ignore rest of config if False
            system: 'phoenix_slurm' # one of "local", "phoenix_slurm"
            job_config: '/nethome/sbaskaran31/projects/Sidharth/MatDeepLearn_dev/configs/jobs/phoenix_slurm.yml'
            count: 3
            sweep_file: '/nethome/sbaskaran31/projects/Sidharth/MatDeepLearn_dev/configs/sweeps/cgcnn_vn_sweep_d1.yml'
            # sweep_file: "/nethome/sbaskaran31/projects/Sidharth/MatDeepLearn_dev/configs/cgcnn_vn_sweep.yml"

model:
    name: CGCNN_VN
    load_model: False
    save_model: True
    model_path: 'cgcnn_vn.pth'
    # model hyperparams
    hyperparams:
        self_loop: True
        dim1: 100
        dim2: 150
        atomic_intermediate_layer_resolution: 0
        pre_fc_count: 1
        gc_count: 4
        post_fc_count: 3
        pool: 'global_mean_pool' # pooling reduction scheme
        virtual_pool:
            virtual_pool_name: 'SelfAttentionRVPooling' # pooling method
            args:
                in_channels: 100
                ratio: 0.5
                nonlinearity: 'tanh'
        mp_pattern: ['rr', 'rv', 'vr', 'vv']
        pool_order: 'early'
        batch_norm: True
        batch_track_stats: True
        act_fn: 'relu'
        act_nn: 'ReLU'
        dropout_rate: 0.0

optim:
    max_epochs: 250
    lr: 0.002
    verbosity: 1
    loss:
        loss_type: 'TorchLossWrapper'
        loss_args: { 'loss_fn': 'l1_loss' }
    batch_size: 64
    optimizer:
        optimizer_type: 'AdamW'
        optimizer_args: {}
    scheduler:
        scheduler_type: 'ReduceLROnPlateau'
        scheduler_args:
            {
                'mode': 'min',
                'factor': 0.8,
                'patience': 10,
                'min_lr': 0.00001,
                'threshold': 0.0002
            }

dataset:
    processed: False # if False, need to preprocessor data and generate .pt file
    force_preprocess: False
    num_examples: 0 # set to 0 when using full dataset, else will take the first "num_examples" examples
    # Path to data files
    # src: "/storage/home/hcoda1/9/sbaskaran31/p-vfung3-0/hMOF/raw_5k/raw_5k/data.json"
    src: '/global/cfs/projectdirs/m3641/Shared/Materials_datasets/hMOF/raw_5k/data.json'
    # src: "/Users/sidbaskaran/Desktop/research/hMOF/raw_5k/data.json"
    # src: "/nethome/sbaskaran31/projects/Sidharth/hMOF/raw_5k/data.json"
    target_path: ''
    # pt_path: "/storage/home/hcoda1/9/sbaskaran31/p-vfung3-0/hMOF/raw_5k/raw_5k/ocp"
    pt_path: '/global/cfs/projectdirs/m3641/Shared/Materials_datasets/hMOF/raw_5k/ocp'
    # pt_path: "/Users/sidbaskaran/Desktop/research/hMOF/raw_5k/ocp"
    # pt_path: "/nethome/sbaskaran31/projects/Sidharth/hMOF/raw_5k/ocp_2"
    # transforms
    transforms:
        - name: GetY
          args:
              index: 5 # methane adsorption uptake
          otf: False
        - name: VirtualNodeGeneration
          args:
              virtual_box_increment: 3
              method: 'ase'
          otf: False
        - name: VirtualEdgeGeneration
          args:
              attrs: ['rr', 'rv', 'vr', 'vv']
              rr_cutoff: 5.0
              rv_cutoff: 5.0
              vr_cutoff: 5.0
              vv_cutoff: 5.0
          otf: False
          batch: True
    # use for passing into global config
    # one of MDL, ASE, OCP
    use_sweep_params: False
    apply_pre_transform_processing: False
    # use again for passing into global config
    data_format: 'json'
    node_representation: 'onehot'
    additional_attributes: []
    # Print out processing info
    verbose: True
    # graph specific settings: preprocessing hyperparams
    preprocess_params:
        cutoff_radius: 5.0
        n_neighbors: 250
        process_batch_size: 25
        edge_calc_method: 'ocp'
        num_offsets: 1
        edge_steps: 25
        all_neighbors: True
        use_degree: False
    # Ratios for train/val/test split out of a total of 1
    train_ratio: 0.8
    val_ratio: 0.05
    test_ratio: 0.15
